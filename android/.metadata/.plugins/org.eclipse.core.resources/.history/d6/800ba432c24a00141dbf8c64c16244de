package com.example.android.sunshine.app;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.LoaderManager.LoaderCallbacks;
import android.support.v4.content.CursorLoader;
import android.support.v4.content.Loader;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import com.example.android.sunshine.app.data.WeatherContract;
import com.example.android.sunshine.app.data.WeatherContract.LocationEntry;
import com.example.android.sunshine.app.data.WeatherContract.WeatherEntry;
import java.util.ArrayList;
import java.util.Date;

public  class ForecastFragment extends Fragment implements LoaderManager.LoaderCallbacks<Cursor> {
	private ArrayAdapter<String> mForecastAdapter;
    public ForecastFragment() {
    }

    

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setHasOptionsMenu(true);
    }


    @Override
    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
        // Inflate the menu; this adds items to the action bar if it is present.
        inflater.inflate(R.menu.forecastfragment, menu);
      
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
    	int id = item.getItemId();
        if (id == R.id.action_refresh) {
        	updateWeather();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }



	private void updateWeather() {
		FetchWeatherTask weatherTask = new FetchWeatherTask(getActivity(), mForecastAdapter);
		SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(getActivity());
		String location = pref.getString(getString(R.string.pref_location_key), getString(R.string.pref_location_default));
		weatherTask.execute(location);
	}
	@Override
    public void onStart(){
    	super.onStart();
    	updateWeather();
    }
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState) {
    	
    	 
        View rootView = inflater.inflate(R.layout.fragment_main, container, false);
        mForecastAdapter = new ArrayAdapter<String>(getActivity(),
   			 R.layout.list_item_forecast,
   			 R.id.list_item_forecast_textview,new ArrayList<String>());
        
        ListView listView = (ListView) rootView.findViewById(R.id.listview_forecast);
        listView.setAdapter(mForecastAdapter);
        
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				String forecast = mForecastAdapter.getItem(position);
				
				Intent intent = new Intent(getActivity(), DetailActivity.class)
				.putExtra(Intent.EXTRA_TEXT, forecast);
				startActivity(intent);
			}
		});
     // These two need to be declared outside the try/catch
     // so that they can be closed in the finally block.
     
        return rootView;
    }
    
}
